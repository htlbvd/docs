正则表达式	regular expressions
	正则表达式分支	regexp choice
		正则表达式序列	regexp sequence
			正则表达式因子	regexp factor
				正则表达式转义	regexp escape
				正则表达式分组	regexp group
					正则表达式分支
				正则表达式字符集	regexp class
					正则表达式字符转义	regexp class escape
			正则表达式量词	regexp quantifier
	正则表达式标志	regexp flags


语法
/pattern/flags
new RegExp(pattern [, flags])
RegExp(pattern [, flags])

pattern
  正则表达式的文本。可以是字符串或正则表达式字面量
flags
	字符串，如果指定，标志可以具有以下值的任意组合：
  g 全局匹配;找到所有匹配，而不是在第一个匹配后停止
	i 忽略大小写
	m 多行; 将开始和结束字符（^和$）视为在多行上工作（也就是，分别匹配每一行的开始和结束（由 \n 或 \r 分割），而不只是只匹配整个输入字符串的最开始和最末尾处。
	u Unicode; 将模式视为Unicode序列点的序列
	y 粘性匹配; 仅匹配目标字符串中此正则表达式的lastIndex属性指示的索引(并且不尝试从任何后续的索引匹配)。
当使用构造函数创造正则对象时，需要常规的字符转义规则

/	正则表达式开始、结束标志

.	匹配除结束符(\n \r \u2028 或 \u2029)外的任何字符
^	匹配文本的开始 输入开始
$	匹配文本的结束 输入结尾


x{i}	匹配i次x
x{i,}	匹配至少i次x
x{i,j}	匹配至少i至多j次x
x？	匹配0或1次x，等同于{0,1}
x*	匹配0或多次x，等同于{0,}
x+	匹配1或多次x，等同于{1,}
量词后加？进行非贪婪匹配，即匹配尽可能得少。不加?为默认贪婪匹配

(x)		捕获型分组
(?:x)	非捕获型分组
x(?=y)	向前正向匹配 正向肯定预查 
x(?!y)	向前负向匹配 正向否定预查

x,y为因子，i,j为非负整数


[  ]		字符集合，匹配集合中的任意一个字符。你可以使用连字符'-'指定一个范围。
[^  ]	匹配里面没有的任意一个字符
 - 		包扩前后两个字符和它们之间的字符

以下字符应进行转义以表示字面量：\/[](){}  ?+*  |.^$
在字符集中.表示字面量；经测试好像?/[](){}+*|^$也是；\不是，也无法被\转义为字面量，只能转义其他非特殊字符，后跟无法转义的字符时无作用

正则表达式转义
\d 匹配一个数字[0-9]
\D [^\d]
\w 匹配一个 字母 或数字 或下划线[A-Za-z0-9_]
\W [^\w]
\s 匹配一个空白符，包括空格、制表符、换页符、换行符和其他 Unicode 空格。[\f\n\r\t\v​\u00a0\u1680​\u180e\u2000​\u2001\u2002​\u2003\u2004​\u2005\u2006​\u2007\u2008​\u2009\u200a​\u2028\u2029​​\u202f\u205f​\u3000]
\S [^\s]
\b 匹配零宽单词边界
\B 匹配非零宽单词边界

\f 换页符
\n 换行符
\r 回车符
\t 水平制表符
\v​ 垂直制表符
[\b] 退格符
\0	匹配一个 NUL 字符。不要在此后面跟小数点。
\cX	X 是 A - Z 的一个字母。匹配字符串中的一个控制字符。
\xhh	匹配编码为 hh （两个十六进制数字）的字符。
\uhhhh	匹配 Unicode 值为 hhhh （四个十六进制数字）的字符。
\1	指向分组1所捕获的文本的一个引用，\2,\3以此类推


JavaScript 语言精粹认为：
	\b,(?=),(?!) 不是一个好特性
	一般情况下最好坚持使用贪婪性匹配
	不建议test()方法中对正则表达式使用g标识


支持正则表达式的 String 对象的方法
	search	检索与正则表达式相匹配的值。
	match	找到一个或多个正则表达式的匹配。
	replace	替换与正则表达式匹配的子串。
	split	把字符串分割为字符串数组。


RegExp构造函数的属性
	RegExp.prototype	允许为所有正则对象添加属性。
	RegExp.length		RegExp.length 值为 2。
	从Function继承：arity,caller,constructor,length,name
RegExp构造函数的方法
	从Function继承：apply,call,toSource,toString

RegExp实例的属性 RegExp.prototype....
	constructor	创建该正则对象的构造函数。
	global	布尔值，表示是否设置g标志,只读
	ignoreCase	布尔值，表示是否设置i标志，只读
	multiline	布尔值，表示是否设置m标志，只读
	sticky	布尔值，表示是否设置y标志，只读
	lastIndex	指定下一次匹配的起始索引。
		只有正则表达式使用了表示全局检索的 "g" 标志时，该属性才会起作用。此时应用下面的规则：
    如果 lastIndex 大于字符串的长度，则 regexp.test 和 regexp.exec 将会匹配失败，然后 lastIndex 被设置为 0。
    如果 lastIndex 等于字符串的长度，且该正则表达式匹配空字符串，则该正则表达式匹配从 lastIndex 开始的字符串。（then the regular expression matches input starting at lastIndex.）
    如果 lastIndex 等于字符串的长度，且该正则表达式不匹配空字符串 ，则该正则表达式不匹配字符串，lastIndex 被设置为 0.。
    否则，lastIndex 被设置为紧随最近一次成功匹配的下一个位置。
	source		返回一个值为当前正则表达式对象的模式文本的字符串，该字符串不会包含正则字面量两边的斜杠以及任何的标志字符。
RegExp实例的方法 RegExp.prototype....
	exec()	接受一个字符串参数，返回包含第一个匹配项信息的数组或null。
		返回的数组包含额外两个属性
			index	匹配项在字符串中的位置
			input	应用正则表达式的字符串
		数组第一项是与整个模式匹配的字符串，其他项是与模式中的捕获组匹配的字符串
		在全局模式下每次调用exec()都会返回字符串中的下一个匹配项，直至搜索到字符串末尾为止，lastIndex每次调用在exec()后都会增加
	test()	接受一个字符串参数，如果匹配成功返回true，否则返回false
	compile()	可用于改变和重新编译正则表达式，已废弃
	继承的方法：toLocaleString()，toString()方法都会返回正则表达式字面量，valueOf()方法返回正则表达式自身，


来源：
	JavaScript 语言精粹
	JavaScript 高级程序设计
	https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-sets