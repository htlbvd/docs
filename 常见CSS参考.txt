语法
  规则
    @规则
    选择器
    声明
      属性  常见属性
      属性值
        数值和单位


层叠：
  顺序      来源      重要程度
  1      用户代理      普通
  2      用户代理      !important
  3      用户      普通
  4      页面作者      普通
  5      CSS动画      见下节
  6      页面作者      !important
  7      用户      !important

  重要性（Importance）
  专用性（Specificity）
    千位：内联样式
    百位：在整个选择器中每包含一个ID选择器就在该列中加1分。
    十位：在整个选择器中每包含一个类选择器、属性选择器、或者伪类就在该列中加1分。
    个位：在整个选择器中每包含一个元素选择器或伪元素就在该列中加1分。
  源代码次序（Source order）

  注意: 通用选择器 (*), 复合选择器 (+, >, ~, ' ') 和否定伪类 (:not) 在专用性中无影响

@规则

  @charset      定义样式表使用的字符集. @charset "<charset>";
  @import      告诉CSS引擎引入一个外部样式表. @import [ <string> | <url> ] [ <media-query-list> ]?
  @namespace      告诉CSS引擎必须考虑XML命名空间。 @namespace <namespace-prefix>? [ <string> | <url> ];
  嵌套@规则 是嵌套语句的子集,不仅可以作为样式表里的一个语句，也可以用在条件规则组里：
    @page      描述打印文档时布局的变化.
    @font-face      描述将下载的外部的字体。
    @keyframes      描述CSS动画的中间步骤 .
    条件规则组
    @media      如果满足媒介查询的条件则条件规则组里的规则生效。 @media <media-query-list> { <group-rule-body> }
    @supports      如果满足给定条件则条件规则组里的规则生效。
    @document      如果文档样式表满足给定条件则条件规则组里的规则生效。 (推延至CSSLevel 4 规范)

选择器
基本选择器
  元素选择器      elename
  类选择器      .classname
  ID选择器      #idname
  通配选择器      * ns|* *|* |*
属性选择器
  [attr]      表示带有以 attr 命名的属性的元素。
  [attr=value]      表示带有以 attr 命名的属性，且属性值为"value"的元素。
  [attr~=value]      表示带有以 attr 命名的属性的元素，并且该属性是一个以空格作为分隔的值列表，其中[至少]一个值匹配"value"。
  [attr|=value]      表示带有以 attr 命名的属性的元素，属性值为“value”或是以“value-”为前缀（"-"为连字符，Unicode编码为U+002D）开头。典型的应用场景是用来来匹配语言简写代码（如zh-CN，zh-TW可以用zh作为value）。
  [attr^=value]      表示带有以 attr 命名的属性，且属性值是以"value"开头的元素。
  [attr$=value]      表示带有以 attr 命名的属性，且属性值是以"value"结尾的元素。
  [attr*=value]      表示带有以 attr 命名的属性，且属性值包含有"value"的元素。
  [attr operator value i]      表示带有以 attr 命名的属性, 且属性值匹配"value" [忽略属性值大小] 的元素。
组合选择器
  相邻兄弟选择器      '+'      A + B
  通用兄弟选择器      '~'      A ~ B
  子选择器      '>'      A > B
  后代选择器      ' '      A B
伪类
  :link      匹配链接元素
  :visited      匹配已访问过的链接元素（可用样式很少）
  :hover      匹配被只是设备虚指的元素
  :active      匹配被激活或被鼠标主键点击的元素
  
  :focus      匹配获得焦点的元素
  :valid      匹配通过验证的表单元素
  :invalid      匹配未通过验证的表单元素
  :checked      匹配处于选中状态的表单元素。 类型为radio或checkbox的input元素或select元素中的option元素
  :default      匹配被默认选中的表单元素。 类型为radio或checkbox的input元素或option元素或button元素
  :required      匹配必填的即有required属性的表单元素。 input,select,textarea元素
  :optional      匹配不是必填的即没有required属性的表单元素。 input,select,textarea元素
  :indeterminate      匹配状态不确定的表单元素
  :in-range      匹配处于限定取值范围内的input元素
  :out--of-range      匹配处于限定取值范围外的input元素

  :disable      匹配被禁用的元素，即含有disable属性的元素
  :enabled      匹配已启用的元素
  :read-only      匹配不可编辑的元素
  :read-write      匹配可编辑的元素

  :only-child      匹配没有兄弟元素的元素
  :only-of-type      匹配没有同类型兄弟元素的元素
  :first-child      匹配在兄弟元素中第一个元素
  :last-child      匹配在兄弟元素中最后一个元素
  :first-of-type      匹配在同类型的兄弟元素中第一个元素
  :last-of-type      匹配在同类型的兄弟元素最后一个元素
  :nth-child(odd|even|xN+y)      匹配兄弟元素中第奇数|偶数|(xN+y)个元素
  :nth-last-child(odd|even|xN+y)      匹配兄弟元素中倒数第奇数|偶数|(xN+y)个元素
  :nth-of-type(odd|even|xN+y)      匹配同类型兄弟元素中第奇数|偶数|(xN+y)个元素
  :nth-last-of-type(odd|even|xN+y)      匹配同类型兄弟元素中第奇数|偶数|(xN+y)个元素

  :scope      匹配参考点元素（除Edge、IE、外支持）
  :defined      匹配已定义的元素（除Edge、IE、外支持）
  :fullscreen      匹配当前处于全屏显示模式的元素（前缀支持）
  :matches(选择器列表)(:any())      匹配匹配选择器列表中任意一个选择器的元素（前缀支持）
  :focus-within      匹配自己或后代获得焦点的元素（除Edge、IE外新版支持）
  :placeholder-show:      匹配显示 placeholder文本的input或textarea元素（除Edge、IE外新版支持）
  :any-link      匹配有href属性的a、area或link元素（除Edge、IE外新版支持）
  :host      包含其内部使用的CSS的shadow DOM的根元素（除Edge、IE外新版支持）
  :host()      选择包含使用这段CSS的 Shadow DOM 的影子宿主（除Edge、IE、Safari外新版支持）
  :first、:left、:right      与 @page 一起配套使用，匹配打印文档的第一页、左页、右页。（仅Edge\IE支持）

伪元素
  ::after      创建一个伪元素，作为该元素的最后一个子元素。此元素默认为行内元素。
  ::before      创建一个伪元素，作为该元素的第一个子元素。此元素默认为行内元素。
  以上两伪元素常通过 content 属性来为一个元素添加修饰性的内容。此元素默认为行内元素。
  ::first-letter      匹配该块级元素第一行的第一个字母，并且文字所处的行之前没有其他内容（如图片和内联的表格） 。
  ::first-line      匹配该块级元素的第一行
  ::selection      匹配该元素内文档中被用户高亮的部分
  ::backdrop      是在任何处于全屏模式的元素下的即刻渲染的盒子
  ::cue      匹配该元素中的WebVTT提示。

  ::slotted()      匹配被放在 HTML模板 中的元素
  ::placeholder      可以选择一个表单元素的占位文本，它允许开发者和设计师自定义占位文本的样式。
  ::marker      选择列表的前置标记，一般包含着重符号或数字。 任何设置 display: list-item属性的元素或伪元素都能使用::marker  比如 <li> 和<summary> 元素.

常见属性
  background
    ...
  font
    ...
  border
    ...
  padding
    ...
  margin
    ...
  outline
    ...
  color
  clear
  cursor
  display
  float
  visibility
  overflow
  height
  line-height
  max-height
  min-height
  width
  max-width
  min-width
  box-sizing
  box-shadow
  filter
  background-blend-mode
  mix-blend-mode
Font 样式:
  font-variant: 在小型大写字母和普通文本选项之间切换。
  font-kerning: 开启或关闭字体间距选项。
  font-feature-settings: 开启或关闭不同的 OpenType 字体特性。
  font-variant-alternates: 控制给定的自定义字体的替代字形的使用。
  font-variant-caps: 控制大写字母替代字形的使用。
  font-variant-east-asian: 控制东亚文字替代字形的使用, 像日语和汉语。
  font-variant-ligatures: 控制文本中使用的连写和上下文形式。
  font-variant-numeric: 控制数字，分式和序标的替代字形的使用。
  font-variant-position: 控制位于上标或下标处，字号更小的替代字形的使用。
  font-size-adjust: 独立于字体的实际大小尺寸，调整其可视大小尺寸。
  font-stretch: 在给定字体的可选拉伸版本中切换。
  text-underline-position: 指定下划线的排版位置，通过使用 text-decoration-line 属性的underline 值。
  text-rendering: 尝试执行一些文本渲染优化。

文本布局样式：
  text-indent: 指定文本内容的第一行前面应该留出多少的水平空间。
  text-overflow: 定义如何向用户表示存在被隐藏的溢出内容。
  white-space: 定义如何处理元素内部的空白和换行。
  word-break: 指定是否能在单词内部换行。
  direction: 定义文本的方向 (这取决于语言，并且通常最好让HTML来处理这部分，因为它是和文本内容相关联的。)
  hyphens: 为支持的语言开启或关闭连字符。
  line-break: 对东亚语言采用更强或更弱的换行规则。
  text-align-last: 定义一个块或行的最后一行，恰好位于一个强制换行前时，如何对齐。
  text-orientation: 定义行内文本的方向。
  word-wrap: 指定浏览器是否可以在单词内换行以避免超出范围。
  writing-mode: 定义文本行布局为水平还是垂直，以及后继文本流的方向。
  letter-spacing
  line-height
  text-align
  text-decoration
  text-shadow
  text-transform
  unicode-bidi
  word-spacing
  hanging-punctuation
  punctuation-trim
  text-emphasis
  text-justify
  text-outline

  list-style
  start
  reversed
  value


  caption-side
  empty-cells
  table-layout
  border-collaps

  position
  top
  right
  bottom
  left
  overflow
  clip
  vertical-align
  z-index
  flex
  flex-flow
  align-items
  align-self
  justify-content

数值和单位

CSS属性值定义语法
  基本组成元素
    关键字
      一般关键字      预定义含义的一般关键字按字面意义出现，不需要引号
      特殊关键字      所有CSS属性值都可以使用inherit、initial和unset
    符号      '/' ','用来分隔属性值
    带类型的参数      用一对尖括号'<'与'>'表示
      基本类型
      其它类型
  符号      名称      描述      示例
    组合符号,优先级依次降低
    [ ]      方括号      强调优先级      bold [ thin && <length> ]
          并置      各部分必须出现且按顺序出现      solid <length>
    &&      “与”组合符      各部分必须出现，但可以不按顺序      <length> && <string>
    ||      “或”组合符      各部分至少出现一个，可以不按顺序      <'border-image-outset'> || <'border-image-slice'>
    |      “互斥”组合符      各部分恰好出现一个      smaller | small | normal | big | bigger
    优先级:
    数量符号
          无数量符号      恰好一次      solid
    *      星号      零次、一次或多次      bold smaller*
    +      加号      一次或多次      bold smaller+
    ?      问号      零次或一次（即可选）      bold smaller?
    {A,B}      大括号      至少A次，至多B次      bold smaller{1,3}
    #      井号      一次或多次，但多次出现必须以逗号分隔      bold smaller#
    !      叹号      组必须产生一个值      [ bold? smaller? ]!

函数
url() rgb() calc() attr() brightness()
clamp() conic-gradient() counter() cross-fade() element() env() 
fit-content() var()
image-set() image()
max() min() minmax()
radial-gradient() linear-gradient()
repeat() repeating-linear-gradient() repeating-redial-gradient()
<filter-function>
  blur()      模糊图像
  brightness()      让图像更明亮或更暗淡
  contrast()      增加或减少图像的对比度
  drop-shadow()      在图像后方应用投影
  grayscale()      将图像转为灰度图
  hue-rotate()      改变图像的整体色调
  invert()      反转图像颜色
  opacity()      改变图像透明度
  saturate()      超饱和或去饱和输入的图像
  sepia()      将图像转为棕褐色 
<transform-function>
  matrix() matrix3d()
  perspective() 
  rotate() rotate3d() rotateX() rotateY() rotateZ() 
  scale() scale3d() scaleX() scaleY() 
  scaleZ() skew() skewX() skewY() 
  translate() translate3d() translateX() translateY() translateZ()
<timing-function>
  cubic-bezier()
  steps()

