语法
  规则
    @规则
    选择器
    声明
      属性  常见属性
      属性值
        数值和单位


层叠：
  重要性和来源，优先级依次上升
  1      用户代理      普通
  2      用户代理      !important
  3      用户      普通
  4      页面作者      普通
  5      CSS动画      见下节
  6      页面作者      !important
  7      用户      !important

  重要性和来源，优先级依次下降（CSS3）
    过渡声明
    重要的用户代理声明
    重要的用户声明
    重要作者声明
    动画声明
    普通作者声明
    普通用户声明
    普通用户代理声明
  特殊性
    千位：内联样式
    百位：在整个选择器中每包含一个ID选择器就在该列中加1分。
    十位：在整个选择器中每包含一个类选择器、属性选择器、或者伪类就在该列中加1分。
    个位：在整个选择器中每包含一个元素选择器或伪元素就在该列中加1分。
  源代码次序，后边的优先级更高

  注意: 通用选择器 (*), 复合选择器 (+, >, ~, ' ') 和否定伪类 (:not) 在特殊性中无影响

@规则
  @charset      定义样式表使用的字符集。      @charset "<charset>";
  @import      告诉CSS引擎引入一个外部样式表。      @import [ <string> | <url> ] [ <media-query-list> ]?
    <url> = url( <string> <url-modifier>* )
  @namespace      告诉CSS引擎必须考虑XML命名空间。       @namespace <namespace-prefix>? [ <string> | <url> ];
  嵌套@规则 是嵌套语句的子集,不仅可以作为样式表里的一个语句，也可以用在条件规则组里：
    @page      描述打印文档时布局的变化。
    @font-face      描述将下载的外部的字体。
      ...
    @keyframes      描述CSS动画的中间步骤。
    条件规则组
    @media      媒体查询       @media <media-query-list> { <group-rule-body> }
      <media-query> = <media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?
      <media-condition> = not <media-in-parens> | <media-in-parens> [ [ and <media-in-parens> ]* | [ or <media-in-parens> ]* ]
      <media-condition-without-or> = not <media-in-parens> | <media-in-parens> [ and <media-in-parens> ]*
      <media-in-parens> = ( <media-condition> ) | ( [ <mf-name> : <mf-value> | <mf-name> | <mf-range> ] ) | <general-enclosed>
      <mf-range> = <mf-name> [ '<' | '>' ]? '='? <mf-value> | <mf-value> [ '<' | '>' ]? '='? <mf-name> | <mf-value> '<' '='? <mf-name> '<' '='? <mf-value> | <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>
      <media-type> = all | print | screen | speech
      <mf-name>:
        name      名称      value      type
        视口/页面尺寸
          width      宽      <length>      range
          height      高      <length>      range
          aspect-ratio      宽高比      <ratio>      range
          orientation      方向      portrait | landscape      discrete
        显示标准
          resolution      分辨率      <resolution> | infinite      range
          scan      显示类型      interlace | progressive      discrete
          grid      栅格      0|1      discrete
          update      更新频率      none | slow | fast      discrete
          overflow-block      块溢出处理      none | scroll | optional-paged | paged      discrete
          overflow-inline      行溢出处理      none | scroll      discrete
        颜色
          color      彩色程度      <integer>      range
          color-index      颜色查找表的条目的数量      <integer>      range
          monochrome      在单色帧缓冲器每像素的比特数      <integer>      range
          color-gamut      色域      srgb | p3 | rec2020      discrete
        不推荐使用
          device-width      设备宽度      <length>      range
          device-height      设备高度      <length>      range
          device-aspect-ratio      设备宽高比      <ratio>      range
    @supports      如果满足给定条件则条件规则组里的规则生效。
    @document      如果文档样式表满足给定条件则条件规则组里的规则生效。 (推延至CSSLevel 4 规范)

选择器
基本选择器
  元素选择器      elename
  类选择器      .classname
  ID选择器      #idname
  通配选择器      * ns|* *|* |*
属性选择器
  [attr]      表示带有以 attr 命名的属性的元素。
  [attr=value]      表示带有以 attr 命名的属性，且属性值为"value"的元素。
  [attr~=value]      表示带有以 attr 命名的属性的元素，并且该属性是一个以空格作为分隔的值列表，其中[至少]一个值匹配"value"。
  [attr|=value]      表示带有以 attr 命名的属性的元素，属性值为“value”或是以“value-”为前缀（"-"为连字符，Unicode编码为U+002D）开头。典型的应用场景是用来来匹配语言简写代码（如zh-CN，zh-TW可以用zh作为value）。
  [attr^=value]      表示带有以 attr 命名的属性，且属性值是以"value"开头的元素。
  [attr$=value]      表示带有以 attr 命名的属性，且属性值是以"value"结尾的元素。
  [attr*=value]      表示带有以 attr 命名的属性，且属性值包含有"value"的元素。
  [attr operator value i]      表示带有以 attr 命名的属性, 且属性值匹配"value" [忽略属性值大小] 的元素。
组合选择器
  相邻兄弟选择器      '+'      A + B
  通用兄弟选择器      '~'      A ~ B
  子选择器      '>'      A > B
  后代选择器      ' '      A B
伪类
  :link      匹配链接元素
  :visited      匹配已访问过的链接元素（可用样式很少）
  :hover      匹配被只是设备虚指的元素
  :active      匹配被激活或被鼠标主键点击的元素
  
  :focus      匹配获得焦点的元素
  :valid      匹配通过验证的表单元素
  :invalid      匹配未通过验证的表单元素
  :checked      匹配处于选中状态的表单元素。 类型为radio或checkbox的input元素或select元素中的option元素
  :default      匹配被默认选中的表单元素。 类型为radio或checkbox的input元素或option元素或button元素
  :required      匹配必填的即有required属性的表单元素。 input,select,textarea元素
  :optional      匹配不是必填的即没有required属性的表单元素。 input,select,textarea元素
  :indeterminate      匹配状态不确定的表单元素
  :in-range      匹配处于限定取值范围内的input元素
  :out--of-range      匹配处于限定取值范围外的input元素

  :disable      匹配被禁用的元素，即含有disable属性的元素
  :enabled      匹配已启用的元素
  :read-only      匹配不可编辑的元素
  :read-write      匹配可编辑的元素

  :only-child      匹配没有兄弟元素的元素
  :only-of-type      匹配没有同类型兄弟元素的元素
  :first-child      匹配在兄弟元素中第一个元素
  :last-child      匹配在兄弟元素中最后一个元素
  :first-of-type      匹配在同类型的兄弟元素中第一个元素
  :last-of-type      匹配在同类型的兄弟元素最后一个元素
  :nth-child(odd|even|xN+y)      匹配兄弟元素中第奇数|偶数|(xN+y)个元素
  :nth-last-child(odd|even|xN+y)      匹配兄弟元素中倒数第奇数|偶数|(xN+y)个元素
  :nth-of-type(odd|even|xN+y)      匹配同类型兄弟元素中第奇数|偶数|(xN+y)个元素
  :nth-last-of-type(odd|even|xN+y)      匹配同类型兄弟元素中第奇数|偶数|(xN+y)个元素

  :scope      匹配参考点元素（除Edge、IE、外支持）
  :defined      匹配已定义的元素（除Edge、IE、外支持）
  :fullscreen      匹配当前处于全屏显示模式的元素（前缀支持）
  :matches(选择器列表)(:any())      匹配匹配选择器列表中任意一个选择器的元素（前缀支持）
  :focus-within      匹配自己或后代获得焦点的元素（除Edge、IE外新版支持）
  :placeholder-show:      匹配显示 placeholder文本的input或textarea元素（除Edge、IE外新版支持）
  :any-link      匹配有href属性的a、area或link元素（除Edge、IE外新版支持）
  :host      包含其内部使用的CSS的shadow DOM的根元素（除Edge、IE外新版支持）
  :host()      选择包含使用这段CSS的 Shadow DOM 的影子宿主（除Edge、IE、Safari外新版支持）
  :first、:left、:right      与 @page 一起配套使用，匹配打印文档的第一页、左页、右页。（仅Edge\IE支持）
伪元素
  ::after      创建一个伪元素，作为该元素的最后一个子元素。此元素默认为行内元素。
  ::before      创建一个伪元素，作为该元素的第一个子元素。此元素默认为行内元素。
  以上两伪元素常通过 content 属性来为一个元素添加修饰性的内容。此元素默认为行内元素。
  ::first-letter      匹配该块级元素第一行的第一个字母，并且文字所处的行之前没有其他内容（如图片和内联的表格） 。
  ::first-line      匹配该块级元素的第一行
  ::selection      匹配该元素内文档中被用户高亮的部分
  ::backdrop      是在任何处于全屏模式的元素下的即刻渲染的盒子
  ::cue      匹配该元素中的WebVTT提示。

  ::slotted()      匹配被放在 HTML模板 中的元素
  ::placeholder      可以选择一个表单元素的占位文本，它允许开发者和设计师自定义占位文本的样式。
  ::marker      选择列表的前置标记，一般包含着重符号或数字。任何设置 display: list-item属性的元素或伪元素都能使用::marker  比如 <li> 和<summary> 元素.


常见属性
显示类型（CSS3）
  display      [ <-outside> || <-inside> ] | <-listitem> | <-internal> | <-box> | <-legacy>
    <-outside>  = block | inline | run-in
    <-inside>   = flow | flow-root | table | flex | grid | ruby
    <-listitem> = <-outside>? && [ flow | flow-root ]? && list-item
    <-internal> = table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container
    <-box>      = contents | none
    <-legacy>   = inline-block | inline-table | inline-flex | inline-grid
盒模型、定位（CSS3）、视觉格式化
  padding      内边距      <padding-width>{1,4}
    -top,-right,-bottom,-left      <padding-width>
    <padding-width> = <length> | <percentage>
  margin      外边距      <margin-width>{1,4}
    -top,-right,-bottom,-left      <margin-width>
    <margin-width> = <length> | <percentage> | auto
  width,height      <length> | <percentage> | auto
  min-width,min-width      <length> | <percentage>
  max-width,max-height      <length> | <percentage> | none

  line-height      元素内行框最小高度      normal | <number> | <length> | <percentage>
  vertical-align      元素内行框内部的垂直定位      baseline | sub | super | top | t

  position      定位方案      static | relative | absolute | sticky | fixed
  top,right,bottom,left      偏移量      auto | <length> | <percentage>ext-top | middle | bottom | text-bottom | <percentage> | <length>
  z-index      堆叠层级      auto | <integer>

  float      浮动      left | right | none
  clear      清除浮动      none | left | right | both
  visibility      可见性      visible | hidden | collapse
溢出（CSS3）、遮罩（CSS3）
  overflow      处理溢出      [ visible | hidden | clip | scroll | auto ]{1,2}
    -x,-y      visible | hidden | clip | scroll | auto
  text-overflow      clip | ellipsis
  overflow-inline,overflow-block,block-overflow,line-clamp,max-lines,continue      auto | discard

  clip-path      裁剪路径      <clip-source> | [ <basic-shape> || <geometry-box> ] | none
    <clip-source> = <url>
    <geometry-box> = <shape-box> | fill-box | stroke-box | view-box
  clip-rule      裁剪规则      nonzero | evenodd
  mask      遮罩      <mask-layer>#
    <mask-layer> = <mask-reference> <masking-mode>? || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator>
    ...
生成的内容（CSS3）、列表样式（CSS3）
  content      生成内容      [ [ <image> | <url> ] ',' ]* [ normal | none | <content-list> ] [/ <string> ]?
  <content-list> = [ <string> | contents | <uri> | <quote> | document-url | <target> | leader() ]+
  quote      指定引号      [ <string> <string> ]+ | none
    ...
  list-style      列表样式      <'-position'> || <'-image'> || <'-type'>
    -position     inside | outside
    -image      <image> | none
    -type      <counter-style> | <string> | none
      <counter-style> = <counter-style-name> | symbols();
      <counter-style-name>
        数字
        decimal      西方十进制数      (1, 2, 3, ..., 98, 99, 100).
        decimal-leading-zero      由初始零填充的十进制数      (01, 02, 03, ..., 98, 99, 100).
        arabic-indic      阿拉伯语编号      (١‎, ٢‎, ٣‎, ٤‎, ..., ٩٨‎, ٩٩‎, ١٠٠‎).
        armenian，upper-armenian      大写亚美尼亚语编号      (Ա, Բ, Գ, ..., ՂԸ, ՂԹ, Ճ).
        cjk-decimal      汉字十进制数     (一, 二, 三, ..., 九八, 九九, 一〇〇).
        devanagari      梵文编号     (१, २, ३, ..., ९८, ९९, १००).
        georgian      格鲁吉亚编号     (ა, ბ, გ, ..., ჟჱ, ჟთ, რ).
        mongolian      蒙古语编号     (᠑, ᠒, ᠓, ..., ᠙᠘, ᠙᠙, ᠑᠐᠐).
        lower-roman      小写罗马数字     (i, ii, iii, ..., xcviii, xcix, c).
        upper-roman      大写罗马数字     (I, II, III, ..., XCVIII, XCIX, C).
        tibetan      藏文编号     (༡, ༢, ༣, ..., ༩༨, ༩༩, ༡༠༠).
        ...
        字母
        lower-alpha,lower-latin      小写拉丁字母     (a, b, c, ..., z, aa, ab).
        upper-alpha,upper-latin      大写拉丁字母     (A, B, C, ..., Z, AA, AB).
        cjk-earthly-branch      地支     (子, 丑, 寅, ..., 亥, 子子, 子丑).
        cjk-heavenly-stem      天干     (甲, 乙, 丙, ..., 癸, 甲甲, 甲乙).
        lower-greek      小写希腊字母     (α, β, γ, ..., ω, αα, αβ).
        hiragana      字典顺序平假名     (あ, い, う, ..., ん, ああ, あい).
        hiragana-iroha      伊吕波平假名     (い, ろ, は, ..., す, いい, いろ).
        katakana      字典顺序片假名     (ア, イ, ウ, ..., ン, アア, アイ).
        katakana-iroha      伊吕波片假名     (イ, ロ, ハ, ..., ス, イイ, イロ)
        形状
        disc      实心圆点(默认值)
        circle      空心圆点
        square      实心方块
        disclosure-open      列表打开
        disclosure-closed      列表关闭
        复杂的（-9999~9999）
        simp-chinese-informal      小写简体中文数字
        simp-chinese-formal      大写简体中文数字
  marker-side      标记位置      match-self | match-parent
  counter-increment      计数器增量      [ <custom-ident> <integer>? ]+ | none
  counter-reset,counter-set      固定名次      [ <custom-ident> <integer>? ]+ | none
  ...
颜色、背景、边框、阴影（CSS3）
  color      颜色      <color>
  opacity      透明度      <alphavalue>
  background      背景      <bg-layer># , <final-bg-layer>
    <bg-layer> = <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>
    <final-bg-layer> =  <‘-color’> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>
    -corlor      背景颜色<color>
    -image      背景图片<bg-image>#      <bg-image> = <image> | none
    -repeat      图片重复<repeat-style>#      <repeat-style> = repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}
    -attachment      图片跟随内容滚动<attachment>#      <attachment> = scroll | fixed | local
    -position      图片位置<bg-position> = [  [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]
    -origin      图片放置位置<box>#
    -clip      图片裁剪位置<box>#      <box> = border-box | padding-box | content-box
    -size      图片大小<bg-size>#      <bg-size> = [ <length-percentage> | auto ]{1,2} | cover | contain
  border,-top,-right,-bottom,-left      边框      <line-width> || <line-style> || <color>
    -corlor      <color>{1,4}
      -top-,-right-,-bottom-,-left-      <color>
    -style      <line-style>{1,4}
      -top-,-right-,-bottom-,-left-      <line-style> = none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset
    -width      <line-width>{1,4}
      -top-,-right-,-bottom-,-left-      <line-width> = <length> | thin | medium | thick
  border-radius      圆角      <length-percentage> {1,4} [/ <length-percentage> {1,4}]?
    -top-left-,-top-right-,-bottom-right-,-bottom-left-      <length-percentage> {1,2}
  border-image      边框图像      <‘-source’> || <‘-slice’> [ / <‘-width’> | / <‘-width’>? / <‘-outset’> ]? || <‘-repeat’>
    -source      none | <image>
    -slice      图片裁剪为边框的位置[<number> | <percentage>]{1,4} && fill?
    -width      [ <length-percentage> | <number> | auto ]{1,4}
    -outset      [ <length> | <number> ]{1,4}
    -repeat      四边和中间放置方式[ stretch | repeat | round | space ]{1,2}
  box-shadow      none | <shadow>#      <shadow> = inset? &&  <length> {2,4}  &&  <color> ?
字体（CSS3）
  font      字体      [ [ <‘-style’> || <-variant-css21> || <‘-weight’> || <‘-stretch’> ]? <‘-size’> [ / <‘line-height’> ]? <‘-family’> ] | caption | icon | menu | message-box | small-caption | status-bar
    -family      [ <family-name> | <generic-family> ] #
    -weight      normal | bold | bolder | lighter | 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900
    -stretch      normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded
    -style      normal | italic | oblique
    -size      <absolute-size> | <relative-size> | <length-percentage>
    <absolute-size>      [ xx-small | x-small | small | medium | large | x-large | xx-large ]
    <relative-size>      [ larger | smaller ]
  font-size-adjust      字体的可视大小尺寸      none | <number>
  font-synthesis      字体合成      none | [ weight || style ]
  font-kerning      字体间距      auto | normal | none
  font-variant      字体变形      normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]
    ...
  font-feature-setting      开启或关闭不同的 OpenType 字体特性。      normal | <feature-tag-value> #
书写模式（CSS3）
  direction      文本方向      ltr | rtl
  unicode-bidi      normal | embed | isolate | bidi-override | isolate-override | plaintext
  writing-mode      书写模式      horizontal-tb | vertical-rl | vertical-lr
  text-orientation      垂直书写模式下的文字方向      mixed | upright | sideways
  text-combine-upright      垂直书写模式下文本组合      auto | 0deg | 90deg | 0 | 90
文本（CSS3）
  text-transform      大小写转换      none | [capitalize | uppercase | lowercase ] || full-width || full-size-kana
  white-space      处理空白字符      normal | pre | nowrap | pre-wrap | break-spaces | pre-line
  tab-size      制表符大小      <number> | <length>
  
  word-break      单词换行前判断将要溢出部分是否断词换行      normal | keep-all | break-all
  line-break      标点处换行规则      auto | loose | normal | strict | anywhere
  hyphens      连字符      none | manual | auto
  overflow-wrap      等同于word-wrap
  word-wrap      单词换行后判断将要溢出部分是否断词换行      normal | break-word | anywhere
  
  text-align      文本对齐方式      start | end | left | right | center | justify | match-parent | justify-all
  text-align-all      默认文本对齐方式      start | end | left | right | center | justify | match-parent
  text-align-last      最后一行对齐方式      auto | start | end | left | right | center | justify | match-parent
  text-justify      auto | none | inter-word | inter-character
  
  word-spacing      单词间隔      normal | <length>
  letter-spacing      字母间隔      normal | <length>
  text-indent      首行缩进      [ <length-percentage> ] && hanging? && each-line?
  hanging-punctuation      标点悬挂      none | [ first || [ force-end | allow-end ] || last ]
文本装饰、强调、阴影（CSS3）
  text-decoration文本装饰      <‘-line’> || <‘-style’> || <‘-color’>
    -line      装饰线位置      none | [ underline || overline || line-through || blink ]
    -style      装饰线样式      solid | double | dotted | dashed | wavy
    -color      装饰线颜色      <color>
  text-underline-position      下划线位置      auto | [ under || [ left | right ] ]

  text-emphasis      文本强调      <‘-style’> || <‘-color’>
    -style      强调样式      none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>
    -color      强调颜色<color>
  text-emphasis-position      强调位置      [ over | under ] && [ right | left ]?

  text-shadow      文本阴影      none | [ <color>? && <length>{2,3} ]#
表格
  table-layout      表格布局算法      auto | fixed
  caption-side      标题位置      top | bottom
  border-collapse      边框模型      collapse | separate
  border-spacing      相邻单元格边框之间的距离      <length> <length>?
  empty-cells      空单元格的边框与背景是否显示      show | hide
用户界面（CSS3）
  box-sizing      宽度算法      content-box | border-box
  outline      轮廓      [ <-color> || <-style> || <-width> ]
    -width      <line-width>
    -style      auto | <border-style>
    -color      <color> | invert
  outline-offset      偏移      <length>
  resize      调整大小      none | both | horizontal | vertical
  cursor      鼠标样式
    [ [<url> [<x> <y>]?,]* 
    [ auto | default | none | context-menu | help | pointer | progress | wait | 
    cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | grab | grabbing | 
    e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | 
    w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | 
    all-scroll | zoom-in | zoom-out ] ]
    ...
  caret-color      光标颜色      auto | <color>
弹性盒（CSS3）
  flex-flow      <‘flex-direction’> || <‘flex-wrap’>
    flex-direction      布局方向      row | row-reverse | column | column-reverse
    flex-wrap      换行      nowrap | wrap | wrap-reverse
  justify-content      主轴内各元素对齐方式      flex-start | flex-end | center | space-between | space-around
  align-items      交叉轴行内各元素对齐方式      flex-start | flex-end | center | baseline | stretch
  align-content      交叉轴上各行对齐方式      flex-start | flex-end | center | space-between | space-around | stretch

  order      设置显示顺序，只适用于弹性盒<integer>
  flex      none | [ <‘-grow’> <‘-shrink’>? || <‘-basis’> ]      默认=(0 1 auto) auto=(1 1 auto) none=(0 0 auto) 正数=(正数 1 0)
    -grow      拉伸因子      <number>
    -shrink      收缩规则      <number>
    -basis      初始主轴大小      content | <‘width’>
  align-self      元素交叉轴对齐方式      auto | flex-start | flex-end | center | baseline | stretch
变换（CSS3）
  transform      none | <transform-function>+
    <transform-function>:
    matrix() = matrix(<number> [ , <number> ] {5,5})      指定六个值a, b, c, d, e, f 的变换矩阵形式的2D变换。
    translate() = translate(<length-percentage> [ , <length-percentage> ] ?)      通过向量[tx, ty] 指定2D平移, 其中tx是第一个平移值参数, ty是可选的第二个平移值参数。如果未提供<ty>, 则ty为零值。
    translateX() = translateX(<length-percentage>)      指定X方向上给定量的平移。
    translateY() = translateY(<length-percentage>)      指定Y方向上给定量的平移。
    scale() = scale(<number> [ , <number> ] ?)      指定由2个参数描述的[sx, sy]缩放矢量的2D缩放操作。如果未提供第二个参数, 则其值等于第一个参数。例如, 比例(1,1)将保持元素不变, 而比例(2,2)将使其在X和Y轴上出现两倍长, 或者是其典型几何尺寸的四倍。
    scaleX() = scaleX(<number>)      使用[sx, 1]缩放矢量指定2D缩放操作, 其中sx作为参数给出。
    scaleY() = scaleY(<number>)      使用[1, sy]缩放矢量指定2D缩放操作, 其中sy作为参数给出。
    rotate() = rotate([ <angle> | <zero> ])      指定由参数中指定的关于元素原点的角度的2D旋转, 由transform-origin属性定义。例如, 旋转(90度)会导致元素按顺时针方向旋转四分之一圈。
    skewX() = skewX([ <angle> | <zero> ])      指定沿给定角度沿X轴的2D倾斜变换。
    skewY() = skewY([ <angle> | <zero> ])      指定沿Y轴按给定角度的2D倾斜变换。
  transform-origin      [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] <length>? | [[ center | left | right ] && [ center | top | bottom ]] <length>?
  transform-box      content-box | border-box | fill-box | stroke-box | view-box
滤镜效果（CSS3）
  filter      none | <filter-value-list>
    <filter-value-list> = [ <filter-function> | <url> ]+
    <filter-function> = <blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>
      blur() = blur(<length> ?)      对输入图像应用高斯模糊。      不允许使用负值。省略时的默认值为0px。插值的初始值为0px。
      brightness() =brightness(<number-percentage> ?)      调整亮度      不允许使用负值。省略时的默认值为1。插值的初始值为1。
      contrast() =contrast(<number-percentage> ?)      调整输入的对比度。      不允许使用负值。省略时的默认值为1。插值的初始值为1。
      drop-shadow() = drop-shadow(<color> ? &&  <length> {2,3})      对投影图像应用阴影效果。      省略长度的默认值为0，省略颜色默认为color属性值。插值的初始值是所有长度值设置为0并且使用的颜色设置为透明。注意：不接受spread值或多个阴影。
      grayscale() =grayscale(<number-percentage> ?)      将输入图像转换为灰度。      不允许使用负值。省略时的默认值为1。插值的初始值为0。
      hue-rotate() = hue-rotate([ <angle>  |  <zero> ] ?)      在输入图像上应用色调旋转。      如果<angle>为零，则可以省略单元标识符。省略时的默认值为0deg。插值的初始值为0deg。
      invert() = invert(<number-percentage> ?)      反转输入图像中的样本。      不允许使用负值。省略时的默认值为1。插值的初始值为0。
      opacity() = opacity(<number-percentage> ?)      对输入图像中的样本应用透明度。      不允许使用负值。省略时的默认值为1。插值的初始值为1。
      saturate() =饱和(<number-percentage> ?)      饱和输入图像。      不允许使用负值。省略时的默认值为1。插值的初始值为1。
      sepia() = sepia(<number-percentage> ?)      将输入图像转换为棕褐色。      不允许使用负值。省略时的默认值为1。插值的初始值为0。
  ...


数值和单位
CSS属性值定义语法
  基本组成元素
    关键字
      一般关键字      预定义含义的一般关键字按字面意义出现, 不需要引号
      特殊关键字      所有CSS属性值都可以使用inherit、initial和unset
    符号      '/' ','用来分隔属性值
    带类型的参数      用一对尖括号'<'与'>'表示
      基本类型
      其它类型
  符号      名称      描述      示例
    组合符号,优先级依次降低
    [ ]      方括号      强调优先级      bold [ thin && <length> ]
    空格      并置      各部分必须出现且按顺序出现      solid <length>
    &&      “与”组合符      各部分必须出现，但可以不按顺序      <length> && <string>
    ||      “或”组合符      各部分至少出现一个，可以不按顺序      <'border-image-outset'> || <'border-image-slice'>
    |      “互斥”组合符      各部分恰好出现一个      smaller | small | normal | big | bigger
    数量符号
          无数量符号      恰好一次      solid
    *      星号      零次、一次或多次      bold smaller*
    +      加号      一次或多次      bold smaller+
    ?      问号      零次或一次（即可选）      bold smaller?
    {A,B}      大括号      至少A次，至多B次      bold smaller{1,3}
    #      井号      一次或多次，但多次出现必须以逗号分隔      bold smaller#
    !      叹号      组必须产生一个值      [ bold? smaller? ]!

函数
  url() rgb() calc() attr() brightness()
  clamp() conic-gradient() counter() cross-fade() element() env() 
  fit-content() var()
  image-set() image()
  max() min() minmax()
  radial-gradient() linear-gradient()
  repeat() repeating-linear-gradient() repeating-redial-gradient()
  <timing-function>
    cubic-bezier()
    steps()

CSS官方定义

  css2，最新版（包括勘误表）      （Level2,latest revision）[CSS2]      这定义了CSS的核心，其中的一部分被后来的规范所覆盖。我们特别推荐阅读第2章，其中介绍了CSS的一些基本概念及其设计原则。
  css语法3      （CSS syntax Level 3）[CSS-SYNTAX-3]      替换CSS2§4.1，CSS2§4.2，CSS2§4.4和CSS2§G，定义如何解析CSS。
  CSS样式属性      （CSS Style Attributes）[CSS-STYLE-ATTR]      定义如何在标记属性中嵌入CSS声明。
  媒体查询3      （Media Queries Level 3）[CSS3-MEDIAQUERIES]      替换CSS2§7.3并扩展特定于媒体的样式的语法。
  CSS条件规则      （CSS Conditional Rules Level 3）[CSS3-CONDITIONAL]      替换CSS2§7.2，更新@media规则的定义以允许嵌套，并为功能支持查询引入@supports规则。
  CSS命名空间      （CSS Namespaces）[CSS3-NAMESPACE]      引入@namespace规则以允许以名称空间为前缀的选择器。
  选择器3      （Selectors Level 3）[SELECT]      替换CSS2§5和CSS2§6.4.3，定义了扩展的选择器范围。
  CSS层叠和继承3      （CSS Cascading and Inheritance Level 3）[CSS-CASCADE-3]      取代CSS2§1.4.3和CSS2§6
  CSS值和单位3      （CSS Values and Units Level 3）[CSS-VALUES-3]      替换CSS2§1.4.2.1，CSS2§4.3和CSS2§A.2.1-3，定义CSS的属性定义语法并扩展其单元集。

  CSS颜色3      （CSS Color Level 3）[CSS3-COLOR]      替换CSS2§4.3.6，CSS2§14.1和CSS2§18.2，定义了扩展的颜色值范围。还介绍了opacity属性。
  CSS背景和边框3      （CSS Backgrounds and Borders Level 3）[CSS3-BACKGROUND]      取代CSS2§8.5和CSS2§14.2，提供更多的背景和边框控制，包括分层背景图像，图像边框和阴影。
  CSS图像值和替换内容3      （CSS Image Vaule and Replaced Content Level 3）[CSS3-IMAGES]      为替换元素（如图像）的大小调整提供新的基础文本，为其大小和方向添加其他控件，并在CSS中引入渐变作为图像的语法。
  CSS字体3      （CSS Fonts Level 3）[CSS-FONTS-3]      取代CSS2§15，并提供对字体选择和功能选择的更多控制。
  CSS多列布局1      （CSS Multi-column Layout Level 1）[CSS3-MULTICOL]      向CSS布局引入多列流。
  CSS用户界面3      （CSS User Interface Module Level 3）[CSS-UI-3]      替换CSS2§18.1和CSS2§18.4，定义游标，大纲和几个新的CSS功能，这些功能也增强了用户界面。
  CSS合成和混合1      （CSS Compositiong and Blending Level 1）[COMPOSITING]      定义叠加内容的合成和混合，并引入控制其模式的功能。
  CSS书写模式3      （CSS Writing Modes Level 3）[CSS-WRITING-MODES-3]      为各种国际书写模式定义CSS支持，例如从左到右（例如拉丁语或印度语），从右到左（例如希伯来语或阿拉伯语），双向（例如混合拉丁语和阿拉伯语）和垂直（例如亚洲文字） 。
  CSS弹性盒模块      （CSS Flexible Box Module Level 1）[CSS-FLEXBOX-1]      为CSS引入灵活的线性布局模型。
  CSS用于层叠变量的自定义属性模块1      （CSS Custom Properties for Cascading Variables Module Level 1）[CSS-VARIABLES-1]      引入级联变量作为所有CSS属性接受的新原始值类型，以及用于定义它们的自定义属性。
  CSS变换1      （CSS Transforms Level 1）[CSS3-TRANSFORMS]      介绍CSS的图形转换。

  CSS过渡1      （CSS Transitions Level 1）[CSS3-TRANSITIONS]
  CSS动画      （CSS Animations Level 1）[CSS3-ANIMATIONS]
  [CSS-EASING-1]。      定义用于随时间转换CSS属性的计算值的机制。
  CSS网格布局模块1      （CSS Grid Layout Module Level 1）[CSS-GRID-1]      定义基于网格的二维布局系统，针对用户界面设计进行了优化。在网格布局模型中，网格容器的子节点可以定位在预定义的灵活或固定大小的布局网格中的任意插槽中。
  CSS文本模块3      （CSS Text Module Level 3）[CSS-TEXT-3]      定义文本操作的属性并指定其处理模型。它包括换行，对齐和对齐，空白处理和文本转换。
  （CSS Will Change Level 1）[CSS-WILL-CHANGE-1]      引入一个名为will-change的性能提示属性。
  滤镜效果模块1      （Filter Effects Module Level 1）[FILTER-EFFECTS-1]      滤镜效果是在元素在文档中显示之前处理元素渲染的一种方式。

  CSS计数器样式等3      （CSS Counter Styles Level 3）[CSS-COUNTER-STYLES-3]      扩展<counter-style>的可能值，并为自定义计数器样式提供@ counter-style语法。
  CSS遮罩1      （CSS Masking Level 1）[CSS-MASKING-1]      取代CSS2§11.1.2并引入了更强大的剪切和屏蔽内容的方法。
  CSS形状模块1      （CSS Shapes Module Level 1）[CSS-SHAPES-1]      延伸浮动以实现非矩形包裹形状。
  CSS文字装饰3      （CSS Text Decoration Level 3）[CSS-TEXT-DECOR-3]      替换CSS2§16.3，提供对文本修饰线的更多控制，并添加指定文本强调标记和文本阴影的功能。
  CSS语音模块1      （CSS Speech Module Level 1）[CSS3-SPEECH]      取代CSS2§A，彻底改变（非规范性）语音渲染章节。
  CSS盒对齐模块3（CSS Box Alignment Module Level 3）[CSS-ALIGN-3]      包含CSS的功能，这些功能与各种CSS框布局模型中容器内框的对齐有关：块布局，表格布局，弹性布局和网格布局。
  CSS碎片模块3      （CSS Fragmentation Module Level 3）[CSS-BREAK-3]      描述将流划分为页面，列或区域的碎片模型。
  （CSS Containment Module Level 1）[CSS-CONTAIN-1]      描述contains属性，指示元素的子树独立于页面的其余部分。这样，如果使用得当，用户代理可以进行大量优化。
  （CSS Scroll Snap Module 1）[CSS-SCROLL-SNAP-1]      包含通过“捕捉位置”控制平移和滚动行为的功能。
  媒体查询4      （Media Queries Level 4）[MEDIAQUERIES-4]      扩展并取代[CSS3-MEDIAQUERIES]，扩展语法，弃用大多数媒体类型以及引入新的媒体功能。
  CSS层叠和继承4      （CSS Cascading and Inheritance Level 4）[CSS-CASCADE-4]      扩展并取代[CSS-CASCADE-3]，描述如何整理样式规则并为所有元素的所有属性赋值。通过级联和继承，为所有元素上的所有属性传播值。

CSS 2.1规范目录
  1 关于CSS 2.1规范
  2 CSS 2.1简介
  3 一致性：要求和建议
  4 语法和基本数据类型
  5 选择器
  6 属性值赋值、层叠（Cascading）和继承
  7 媒体类型
  8 盒模型
  9 视觉格式化模型
  10 视觉格式化模型细节
  11 可视化效果
  12 内容生成，自动编号与列表
  13 分页媒体
  14 颜色与背景
  15 字体
  16 文本
  17 表格
  18 用户界面
  附录 A. 听觉（Aural）样式表
  附录 B. 参考文献
  附录 C. 改动
  附录 D. HTML 4的默认样式表
  附录 E. 层叠上下文（Stacking Contexts）详细描述
  附录 F. 属性表
  附录 G. CSS 2.1语法
  附录 I. 索引


来源：
https://developer.mozilla.org/zh-CN/docs/Web/CSS
https://www.w3.org/TR/css/
https://www.w3.org/TR/CSS22
http://www.ayqy.net/doc/css2-1/cover.html